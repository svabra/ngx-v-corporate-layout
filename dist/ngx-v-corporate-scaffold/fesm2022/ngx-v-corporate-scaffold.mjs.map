{"version":3,"file":"ngx-v-corporate-scaffold.mjs","sources":["../../../projects/ngx-v-corporate-scaffold/src/lib/ngx-v-corporate-scaffold.service.ts","../../../projects/ngx-v-corporate-scaffold/src/lib/ngx-v-corporate-scaffold.component.ts","../../../projects/ngx-v-corporate-scaffold/src/lib/header/header.component.ts","../../../projects/ngx-v-corporate-scaffold/src/lib/header/header.component.html","../../../projects/ngx-v-corporate-scaffold/src/public-api.ts","../../../projects/ngx-v-corporate-scaffold/src/ngx-v-corporate-scaffold.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxVCorporateScaffoldService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'corp-ngx-v-corporate-scaffold',\r\n  standalone: true,\r\n  imports: [],\r\n  template: `\r\n    <p>\r\n      ngx-v-corporate-scaffold works!\r\n    </p>\r\n  `,\r\n  styles: ``\r\n})\r\nexport class NgxVCorporateScaffoldComponent {\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { RouterLink } from '@angular/router';\r\nimport { NgClass } from '@angular/common';\r\n\r\ntype LogoType = 'compact' | 'extended';\r\n\r\ninterface MenuItem {\r\n  label: string;\r\n  url: string;\r\n  subMenu?: MenuItem[];\r\n}\r\n\r\n@Component({\r\n  selector: 'corp-header',\r\n  standalone: true,\r\n  imports: [RouterLink, NgClass],\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n})\r\nexport class HeaderComponent {\r\n\r\n  @Input() appName?: string;\r\n  @Input() tagline?: string;\r\n  @Input() catchyTagline?: string;\r\n  @Input() links: MenuItem[] = [];\r\n  @Input() metaLinks: { label: string; url: string }[] = [];\r\n  @Input() logoType: LogoType = 'extended';\r\n\r\n  isAppNameHovered = false;\r\n  openedMenuIndex: number | null = null;\r\n\r\n  onMenuClick(event: Event, idx: number, hasSubmenu: boolean): void {\r\n    if (hasSubmenu) {\r\n      event.preventDefault();\r\n      this.openedMenuIndex = this.openedMenuIndex === idx ? null : idx;\r\n    } else {\r\n      this.closeSubmenu();\r\n    }\r\n  }\r\n\r\n  closeSubmenu(): void {\r\n    this.openedMenuIndex = null;\r\n  }\r\n\r\n}\r\n","<header class=\"header\">\r\n  <!-- Meta Navigation -->\r\n  <div class=\"meta-nav\">\r\n    <div class=\"meta-nav-links\">\r\n      @if (metaLinks && metaLinks.length > 0) {\r\n        @for (link of metaLinks; track link.label) {\r\n          <a [routerLink]=\"link.url\" class=\"meta-nav-link\">{{ link.label }}</a>\r\n        }\r\n      }\r\n    </div>\r\n    <div class=\"meta-nav-shortcuts\">\r\n      <ng-content select=\"[meta-nav-shortcuts]\"></ng-content>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Logo and Main Navigation -->\r\n  <div class=\"logo-menu-container\">\r\n    <div class=\"logo-tagline\">\r\n      <img\r\n        class=\"logo-img\"\r\n        [ngClass]=\"{ show: logoType === 'compact', hide: logoType !== 'compact' }\"\r\n        src=\"/assets/ngx-v-corporate-scaffold/logos/Armee_Schild_schwarz_RGB.png\"\r\n        alt=\"Armed Forces (compact logo)\"\r\n      />\r\n      <img\r\n        class=\"logo-img\"\r\n        [ngClass]=\"{ show: logoType === 'extended', hide: logoType !== 'extended' }\"\r\n        src=\"/assets/ngx-v-corporate-scaffold/logos/Armee_Logo_EN_neg_RGB.png\"\r\n        alt=\"Armed Forces (extended logo)\"\r\n      />\r\n    </div>\r\n\r\n    <nav class=\"header-links\" aria-label=\"Main navigation\">\r\n      <ul>\r\n        @if (links && links.length > 0) {\r\n          @for (link of links; track link.label; let idx = $index) {\r\n            <li class=\"menu-item\" [class.has-submenu]=\"link.subMenu?.length\">\r\n              <a\r\n                [routerLink]=\"link.url\"\r\n                class=\"header-link\"\r\n                (click)=\"onMenuClick($event, idx, !!link.subMenu?.length)\"\r\n                [class.active]=\"openedMenuIndex === idx\"\r\n                tabindex=\"0\"\r\n              >\r\n                {{ link.label }}\r\n                @if (link.subMenu?.length) {\r\n                  <span\r\n                    class=\"submenu-arrow\"\r\n                    [class.open]=\"openedMenuIndex === idx\"\r\n                  ></span> \r\n                }\r\n              </a>\r\n            </li>\r\n          }\r\n        }\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n\r\n  <!-- App Name and Tagline -->\r\n  @if (appName) {\r\n    <div class=\"appName-tagline\">\r\n      <div class=\"appName\" (mouseenter)=\"isAppNameHovered = true\" (mouseleave)=\"isAppNameHovered = false\">\r\n        {{ appName }}\r\n      </div>\r\n      @if (tagline) {\r\n        <span class=\"tagline-wrapper\">\r\n          @if (catchyTagline && isAppNameHovered) {\r\n            <span class=\"tagline tagline-fade\">{{ catchyTagline }}</span>\r\n          } @else {\r\n            <span class=\"tagline tagline-fade\">{{ tagline }}</span>\r\n          }\r\n        </span>\r\n      }\r\n    </div>\r\n  }\r\n\r\n  <!-- Submenu (full-width, at bottom of header) -->\r\n  @if (openedMenuIndex !== null && links[openedMenuIndex]?.subMenu?.length) {\r\n    <!-- Backdrop to close submenu on click elsewhere -->\r\n    <div class=\"mega-submenu-backdrop\" (click)=\"closeSubmenu()\"></div>\r\n    <div class=\"mega-submenu\">\r\n      <ul>\r\n        @for (sub of links[openedMenuIndex].subMenu; track sub.label) {\r\n          <li>\r\n            <a\r\n              [routerLink]=\"sub.url\"\r\n              class=\"submenu-link\"\r\n              (click)=\"closeSubmenu()\"\r\n            >{{ sub.label }}</a>\r\n          </li>\r\n        }\r\n      </ul>\r\n    </div>\r\n  }\r\n</header>\r\n","/*\r\n * Public API Surface of ngx-v-corporate-scaffold\r\n */\r\n\r\nexport * from './lib/ngx-v-corporate-scaffold.service';\r\nexport * from './lib/ngx-v-corporate-scaffold.component';\r\nexport * from './lib/header/header.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}